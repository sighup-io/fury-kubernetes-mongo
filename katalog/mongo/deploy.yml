kind: Service
apiVersion: v1
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  clusterIP: None
  selector:
    app: mongo
  ports:
  - name: mongodb
    protocol: TCP
    port: 27017
    targetPort: mongodb
  - name: metrics
    protocol: TCP
    port: 9216
    targetPort: metrics
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo"
  template:
    metadata:
      labels:
        app: mongo
    spec:
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - mongo
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 90
      initContainers:
        - name: change-keyfile-owner
          image: "alpine:3.11.2"
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "cp /mongod-keyfile/mongod.key /mongod-keyfile-fixedowner/mongod.key && \
               chown 999:999 /mongod-keyfile-fixedowner/mongod.key && \
               chmod 0400 /mongod-keyfile-fixedowner/mongod.key"
          volumeMounts:
            - name: mongod-keyfile-fixedowner
              mountPath: /mongod-keyfile-fixedowner
            - name: mongod-keyfile
              mountPath: /mongod-keyfile
      containers:
      - name: mongo-peer-finder
        image: quay.io/sighup/mongo-peer-finder:4.2.2_v3
        imagePullPolicy: Always
        command: ["/usr/bin/peer-finder"]
        args:
        - "-on-change=/on-change.sh"
        - "-service=$(MONGO_SVC_NAME)"
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: REPLICA_SET
          value: "rs0"
        - name: TIMEOUT
          value: "60"
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: password
        volumeMounts:
        - name: on-change
          mountPath: /on-change.sh
          subPath: on-change.sh
      - name: mongodb-exporter
        image: quay.io/sighup/mongodb_exporter:v0.6.2
        imagePullPolicy: Always
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: password
        - name: MONGODB_URI
          value: "mongodb://$(MONGO_INITDB_ROOT_USERNAME):$(MONGO_INITDB_ROOT_PASSWORD)@localhost:27017"
        ports:
        - name: metrics
          containerPort: 9216
      - name: mongo
        image: mongo:4.2.2
        imagePullPolicy: Always
        args: ["--replSet", "$(REPLICA_SET)", "--keyFile", "mongod.key"]
        env:
        - name: TZ
          value: "Etc/UTC"
        - name: REPLICA_SET
          value: rs0
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: password
        ports:
        - name: mongodb
          containerPort: 27017
        lifecycle:
          preStop:
            exec:
              command: ["/usr/bin/mongo", "--eval", "db.shutdownServer({timeoutSecs: 60})"]
        livenessProbe:
          exec:
            command:
            - "mongo"
            - "--eval"
            - "db.adminCommand('ping')"
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - "mongo"
            - "--eval"
            - "db.adminCommand('ping')"
          timeoutSeconds: 5
        resources:
          requests:
            memory: 512Mi
            cpu: 500m
          limits:
            memory: 2Gi
            cpu: 1000m
        volumeMounts:
        - name: mongo
          mountPath: /data/db
        - name: mongod-keyfile-fixedowner
          mountPath: /mongod.key
          subPath: mongod.key
      volumes:
      - name: on-change
        configMap:
          name: mongo-peer-finder
          items:
          - key: on-change.sh
            path: on-change.sh
            mode: 0755
      - name: mongod-keyfile
        secret:
          secretName: mongod-keyfile
      - name: mongod-keyfile-fixedowner
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mongo
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi
